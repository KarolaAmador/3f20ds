let s = [3,1,4,2,3], 
    perm1;

function permutaciones (n){
        perm1 = [];
    let perm = (a, p = []) =>{
        if (!a.length) {
            perm1.push(p);
            return;
        }
        for(let i in a) {
            let curr = a.slice();
            let nx = curr.splice(i,1);
            perm(curr, p.concat(nx));
        }
    } 
    perm(n);
    return perm1;
}

console.log(permutaciones(s));
console.log("Es una Complejidad Cuadrática");
console.log('Total de permutaciones', perm1.length);

/* se debe extender en consola de navegador 
>(120) [Array(5), Array(5), Array(5), Array(5),
        Array(5), Array(5), Array(5), Array(5),
        Array(5), Array(5), Array(5), Array(5), …]
>[0 … 99]
>[100 … 119]
0: (5) [3, 1, 4, 2, 3]
1: (5) [3, 1, 4, 3, 2]
2: (5) [3, 1, 2, 4, 3]
3: (5) [3, 1, 2, 3, 4]
4: (5) [3, 1, 3, 4, 2]
5: (5) [3, 1, 3, 2, 4]
6: (5) [3, 4, 1, 2, 3]
7: (5) [3, 4, 1, 3, 2]
8: (5) [3, 4, 2, 1, 3]
9: (5) [3, 4, 2, 3, 1]
10: (5) [3, 4, 3, 1, 2]
11: (5) [3, 4, 3, 2, 1]
12: (5) [3, 2, 1, 4, 3]
13: (5) [3, 2, 1, 3, 4]
14: (5) [3, 2, 4, 1, 3]
15: (5) [3, 2, 4, 3, 1]
16: (5) [3, 2, 3, 1, 4]
17: (5) [3, 2, 3, 4, 1]
18: (5) [3, 3, 1, 4, 2]
19: (5) [3, 3, 1, 2, 4]
20: (5) [3, 3, 4, 1, 2]
21: (5) [3, 3, 4, 2, 1]
22: (5) [3, 3, 2, 1, 4]
23: (5) [3, 3, 2, 4, 1]
24: (5) [1, 3, 4, 2, 3]
25: (5) [1, 3, 4, 3, 2]
26: (5) [1, 3, 2, 4, 3]
27: (5) [1, 3, 2, 3, 4]
28: (5) [1, 3, 3, 4, 2]
29: (5) [1, 3, 3, 2, 4]
30: (5) [1, 4, 3, 2, 3]
31: (5) [1, 4, 3, 3, 2]
32: (5) [1, 4, 2, 3, 3]
33: (5) [1, 4, 2, 3, 3]
34: (5) [1, 4, 3, 3, 2]
35: (5) [1, 4, 3, 2, 3]
36: (5) [1, 2, 3, 4, 3]
37: (5) [1, 2, 3, 3, 4]
38: (5) [1, 2, 4, 3, 3]
39: (5) [1, 2, 4, 3, 3]
40: (5) [1, 2, 3, 3, 4]
41: (5) [1, 2, 3, 4, 3]
42: (5) [1, 3, 3, 4, 2]
43: (5) [1, 3, 3, 2, 4]
44: (5) [1, 3, 4, 3, 2]
45: (5) [1, 3, 4, 2, 3]
46: (5) [1, 3, 2, 3, 4]
47: (5) [1, 3, 2, 4, 3]
48: (5) [4, 3, 1, 2, 3]
49: (5) [4, 3, 1, 3, 2]
50: (5) [4, 3, 2, 1, 3]
51: (5) [4, 3, 2, 3, 1]
52: (5) [4, 3, 3, 1, 2]
53: (5) [4, 3, 3, 2, 1]
54: (5) [4, 1, 3, 2, 3]
55: (5) [4, 1, 3, 3, 2]
56: (5) [4, 1, 2, 3, 3]
57: (5) [4, 1, 2, 3, 3]
58: (5) [4, 1, 3, 3, 2]
59: (5) [4, 1, 3, 2, 3]
60: (5) [4, 2, 3, 1, 3]
61: (5) [4, 2, 3, 3, 1]
62: (5) [4, 2, 1, 3, 3]
63: (5) [4, 2, 1, 3, 3]
64: (5) [4, 2, 3, 3, 1]
65: (5) [4, 2, 3, 1, 3]
66: (5) [4, 3, 3, 1, 2]
67: (5) [4, 3, 3, 2, 1]
68: (5) [4, 3, 1, 3, 2]
69: (5) [4, 3, 1, 2, 3]
70: (5) [4, 3, 2, 3, 1]
71: (5) [4, 3, 2, 1, 3]
72: (5) [2, 3, 1, 4, 3]
73: (5) [2, 3, 1, 3, 4]
74: (5) [2, 3, 4, 1, 3]
75: (5) [2, 3, 4, 3, 1]
76: (5) [2, 3, 3, 1, 4]
77: (5) [2, 3, 3, 4, 1]
78: (5) [2, 1, 3, 4, 3]
79: (5) [2, 1, 3, 3, 4]
80: (5) [2, 1, 4, 3, 3]
81: (5) [2, 1, 4, 3, 3]
82: (5) [2, 1, 3, 3, 4]
83: (5) [2, 1, 3, 4, 3]
84: (5) [2, 4, 3, 1, 3]
85: (5) [2, 4, 3, 3, 1]
86: (5) [2, 4, 1, 3, 3]
87: (5) [2, 4, 1, 3, 3]
88: (5) [2, 4, 3, 3, 1]
89: (5) [2, 4, 3, 1, 3]
90: (5) [2, 3, 3, 1, 4]
91: (5) [2, 3, 3, 4, 1]
92: (5) [2, 3, 1, 3, 4]
93: (5) [2, 3, 1, 4, 3]
94: (5) [2, 3, 4, 3, 1]
95: (5) [2, 3, 4, 1, 3]
96: (5) [3, 3, 1, 4, 2]
97: (5) [3, 3, 1, 2, 4]
98: (5) [3, 3, 4, 1, 2]
99: (5) [3, 3, 4, 2, 1]
[100 … 119]
100: (5) [3, 3, 2, 1, 4]
101: (5) [3, 3, 2, 4, 1]
102: (5) [3, 1, 3, 4, 2]
103: (5) [3, 1, 3, 2, 4]
104: (5) [3, 1, 4, 3, 2]
105: (5) [3, 1, 4, 2, 3]
106: (5) [3, 1, 2, 3, 4]
107: (5) [3, 1, 2, 4, 3]
108: (5) [3, 4, 3, 1, 2]
109: (5) [3, 4, 3, 2, 1]
110: (5) [3, 4, 1, 3, 2]
111: (5) [3, 4, 1, 2, 3]
112: (5) [3, 4, 2, 3, 1]
113: (5) [3, 4, 2, 1, 3]
114: (5) [3, 2, 3, 1, 4]
115: (5) [3, 2, 3, 4, 1]
116: (5) [3, 2, 1, 3, 4]
117: (5) [3, 2, 1, 4, 3]
118: (5) [3, 2, 4, 3, 1]
119: (5) [3, 2, 4, 1, 3]
length: 120 */